{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com/users';\n  }\n  getUsers() {\n    return this.http.get(`${this.apiUrl}`);\n  }\n  getUser() {\n    return this.http.get(`${this.apiUrl}/1`);\n  }\n  createUser(user) {\n    return this.http.post(`${this.apiUrl}`, user);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});\nupdateUser(user, User);\nObservable < User > {\n  return: this.http.post(`${this.apiUrl}`, user)\n};","map":{"version":3,"mappings":"AAEA,SAAQA,UAAU,QAAO,MAAM;;;AAO/B,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAE,4CAA4C;EAEpB;EAExCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,MAAM,EAAE,CAAC;EAChD;EAEAC,OAAO;IACL,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAO,GAAG,IAAI,CAACC,MAAM,IAAI,CAAC;EAChD;EAEAE,UAAU,CAACC,IAAU;IACnB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACJ,MAAM,EAAE,EAAEG,IAAI,CAAC;EACrD;;AAhBWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAU,SAAXV,WAAW;EAAAW,YAHV;AAAM;AAqBlBC,UAAU,CAACJ,IAAI,EAAEK,IAAI,CAAC;AAAEd,UAAU,GAACc,IAAI,GAAE;EACvCC,MAAM,EAAC,IAAI,CAACZ,IAAI,CAACO,IAAI,CAAO,GAAG,IAAI,CAACJ,MAAM,EAAE,EAAEG,IAAI;CACnD","names":["Observable","UserService","constructor","http","getUsers","get","apiUrl","getUser","createUser","user","post","factory","providedIn","updateUser","User","return"],"sourceRoot":"","sources":["C:\\Users\\Praktykant2\\Desktop\\projekt\\angular\\http\\angularhttp\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport { User } from '../interface/user';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UserService {\n\n  private apiUrl ='https://jsonplaceholder.typicode.com/users';\n  \n  constructor(private http: HttpClient) { }\n\n  getUsers(): Observable <User[]> { //paczy na Usera czy się zmienia, zwraca <get> tablice z użytkownikami\n    return this.http.get<User[]>(`${this.apiUrl}`)  \n  }\n\n  getUser(): Observable<User> {\n    return this.http.get<User>(`${this.apiUrl}/1`)\n  }\n\n  createUser(user: User): Observable<User> {\n    return this.http.post<User>(`${this.apiUrl}`, user)\n  }\n}\n  updateUser(user: User): Observable<User> {\n    return this.http.post<User>(`${this.apiUrl}`, user)\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}