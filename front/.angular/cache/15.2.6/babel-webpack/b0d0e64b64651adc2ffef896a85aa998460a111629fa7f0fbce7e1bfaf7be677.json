{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.users = [];\n    this.title = 'angularhttp';\n    this.user = {\n      'id': 10,\n      'name': 'Lmao Graham',\n      'username': 'Lmao',\n      'email': 'pierre@april.biz',\n      'address': {\n        'street': 'Kulas Light',\n        'suite': 'Apt. 556',\n        'city': 'Gwenborough',\n        'zipcode': '92998-3874',\n        'geo': {\n          'lat': '-37.3159',\n          'lng': '81.1496'\n        }\n      },\n      'phone': '1-770-736-8031 x56442',\n      'website': 'hildegard.org',\n      'company': {\n        'name': 'pierrrrr',\n        'catchPhrase': 'Multi-layered client-server neural-net',\n        'bs': 'harness real-time e-markets'\n      }\n    };\n    this.user1 = {\n      'id': 2,\n      'name': 'teast Graham',\n      'username': 'Lmao',\n      'email': 'pierre@april.biz'\n    };\n  }\n  ngOnInit() {\n    //this.onUpdateUser();\n    //this.onPatchUser();\n    this.onGetUsers();\n    //this.onGetUsers2();\n    //this.onGetUsers3();\n    //this.onGetUser();\n    //this.onCreateUser();\n    //this.onDeleteUser();\n    //this.onTextFile();\n  }\n\n  onGetUsers() {\n    this.userService.getUsers().subscribe(response => {\n      console.table(response);\n      this.users = response;\n    }, error => console.log(error), () => console.log('Done getting users'));\n  }\n  onGetUsers2() {\n    this.userService.getUsers2().subscribe(response => console.log(response), error => console.log(error), () => console.log('Done getting users'));\n  }\n  onGetUsers3() {\n    this.userService.getUsers3().subscribe(response => console.log(response), error => console.log(error), () => console.log('Done getting users'));\n  }\n  onTextFile() {\n    this.userService.getTextFile().subscribe(response => console.log('Response:', response), error => console.log(error), () => console.log('Done getting files'));\n  }\n  onGetUser() {\n    this.userService.getUser().subscribe(response => console.log(response), error => console.log(error), () => console.log('Done getting users'));\n  }\n  onCreateUser() {\n    this.userService.createUser(this.user).subscribe(response => console.log(response), error => console.log(error), () => console.log('Done creating users'));\n  }\n  onUpdateUser() {\n    this.userService.updateUser(this.user).subscribe(response => console.log(response), error => console.log(error), () => console.log('Done update users'));\n  }\n  onPatchUser() {\n    this.userService.patchUser(this.user1).subscribe(response => console.log(response), error => console.log(error), () => console.log('Done patching users'));\n  }\n  onDeleteUser() {\n    this.userService.deleteUser(5).subscribe(response => console.log('Response from delete: ', response), error => console.log(error), () => console.log('Done deleting users'));\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","userService","ngOnInit","onGetUsers","getUsers","subscribe","response","console","table","users","error","log","onGetUsers2","getUsers2","onGetUsers3","getUsers3","onTextFile","getTextFile","onGetUser","getUser","onCreateUser","createUser","user","onUpdateUser","updateUser","onPatchUser","patchUser","user1","onDeleteUser","deleteUser","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Praktykant2\\Desktop\\projekt\\angular\\http\\angularhttp\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { UserService } from './service/user.service';\nimport { User } from './interface/user';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  users: User[] = [];\n  title = 'angularhttp';\n\n  private user: User = {\n    'id': 10,\n    'name': 'Lmao Graham',\n    'username': 'Lmao',\n    'email': 'pierre@april.biz',\n    'address': {\n      'street': 'Kulas Light',\n      'suite': 'Apt. 556',\n      'city': 'Gwenborough',\n      'zipcode': '92998-3874',\n      'geo': {\n        'lat': '-37.3159',\n        'lng': '81.1496'\n      }\n    },\n    'phone': '1-770-736-8031 x56442',\n    'website': 'hildegard.org',\n    'company': {\n      'name': 'pierrrrr',\n      'catchPhrase': 'Multi-layered client-server neural-net',\n      'bs': 'harness real-time e-markets'\n    }\n  }\n  private user1: any = {\n    'id': 2,\n    'name': 'teast Graham',\n    'username': 'Lmao',\n    'email': 'pierre@april.biz',\n  }\n\n  constructor(private userService: UserService) { }\n\n  ngOnInit(): void {\n    //this.onUpdateUser();\n    //this.onPatchUser();\n    this.onGetUsers();\n    //this.onGetUsers2();\n    //this.onGetUsers3();\n    //this.onGetUser();\n    //this.onCreateUser();\n    //this.onDeleteUser();\n    //this.onTextFile();\n  }\n  onGetUsers(): void {\n    this.userService.getUsers().subscribe(\n      (response) => {\n        console.table(response);\n        this.users=response;\n      },\n      (error: any) => console.log(error),\n      () => console.log('Done getting users')\n    )\n  }\n  onGetUsers2(): void {\n    this.userService.getUsers2().subscribe(\n      (response) => console.log(response),\n      (error: any) => console.log(error),\n      () => console.log('Done getting users')\n    )\n  }\n  onGetUsers3(): void {\n    this.userService.getUsers3().subscribe(\n      (response) => console.log(response),\n      (error: any) => console.log(error),\n      () => console.log('Done getting users')\n    )\n  }\n\n  onTextFile(): void {\n    this.userService.getTextFile().subscribe(\n      (response) => console.log('Response:', response),\n      (error: any) => console.log(error),\n      () => console.log('Done getting files')\n    )\n  }\n\n  onGetUser(): void {\n    this.userService.getUser().subscribe(\n      (response) => console.log(response),\n      (error: any) => console.log(error),\n      () => console.log('Done getting users')\n    )\n  }\n\n  onCreateUser(): void {\n    this.userService.createUser(this.user).subscribe(\n      (response) => console.log(response),\n      (error: any) => console.log(error),\n      () => console.log('Done creating users')\n    )\n  }\n\n  onUpdateUser(): void {\n    this.userService.updateUser(this.user).subscribe(\n      (response) => console.log(response),\n      (error: any) => console.log(error),\n      () => console.log('Done update users')\n    )\n  }\n\n  onPatchUser(): void {\n    this.userService.patchUser(this.user1).subscribe(\n      (response) => console.log(response),\n      (error: any) => console.log(error),\n      () => console.log('Done patching users')\n    )\n  }\n  onDeleteUser(): void {\n    this.userService.deleteUser(5).subscribe(\n      (response) => console.log('Response from delete: ', response),\n      (error: any) => console.log(error),\n      () => console.log('Done deleting users')\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}